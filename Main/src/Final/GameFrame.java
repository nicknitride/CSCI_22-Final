package Final; /**
 @author Nicholo Patrick C. Pardines (193821)
 @version May 23,2020
This class is responsible for the JFrame and JPanel aspects of the game.
The JPanel is forwarded to the GameCanvas instance in order for the player class generated by the GameCanvas class
to be able to initialize the input and action maps.
 */

/*
	I have not discussed the Java language code in my program
	with anyone other than my instructor or the teaching assistants
	assigned to this course.

	I have not used Java language code obtained from another student,
	or any other unauthorized source, either modified or unmodified.

	If any Java language code or documentation used in my program
	was obtained from another source, such as a textbook or website,
	that has been clearly noted with a proper citation in the comments
	of my program.
*/

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

//This class contains the code that sets up the main JFrame for the player.
public class GameFrame {
    public JFrame frame;
    public GameCanvas gameCanvas;
    public Timer timer;
    public JPanel framePanel;
    public void setUpGUI(int width, int height, ObjectOutputStream oOut, ObjectInputStream oIn, String playerType){
        frame = new JFrame();
        framePanel = (JPanel) frame.getContentPane();

        frame.setSize(width,height);

        gameCanvas = new GameCanvas(width,height,exportJPanel(), oOut,oIn,playerType);
        framePanel.add(gameCanvas);


        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);
        frame.setVisible(true);
    }

    public JPanel exportJPanel(){
        return framePanel;
    }

    public void setUpTimer(){
        ActionListener timerActionListener = new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                gameCanvas.repaint();
            }
        };
        timer = new Timer(20,timerActionListener);
        timer.start();
    }
}
